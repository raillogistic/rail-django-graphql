name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: '1.1.4'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      HAS_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN != '' }}
      RELEASE_TAG: ${{ github.event.inputs.tag || github.ref_name }}

    steps:
      - name: Validate release tag
        run: |
          TAG="${{ env.RELEASE_TAG }}"
          echo "Processing release for tag: $TAG"
          
          # Validate tag format
          if [[ ! "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+.*$ ]]; then
            echo "Error: Tag $TAG does not follow semantic versioning format (v*.*.*))"
            exit 1
          fi
          
          # Extract version from tag
          VERSION=${TAG#v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Verify version consistency
        run: |
          # Check if pyproject.toml version matches the tag
          PYPROJECT_VERSION=$(python -c "
          import toml
          with open('pyproject.toml', 'r') as f:
              data = toml.load(f)
          print(data['project']['version'])
          ")
          
          echo "Tag version: ${{ env.VERSION }}"
          echo "pyproject.toml version: $PYPROJECT_VERSION"
          
          if [ "${{ env.VERSION }}" != "$PYPROJECT_VERSION" ]; then
            echo "Warning: Version mismatch between tag (${{ env.VERSION }}) and pyproject.toml ($PYPROJECT_VERSION)"
            echo "This may indicate an issue with the auto-tagging workflow"
          else
            echo "âœ… Version consistency verified"
          fi

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine toml

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ env.RELEASE_TAG }}
          name: Release ${{ env.RELEASE_TAG }}
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## Release ${{ env.RELEASE_TAG }}
            
            **Version:** ${{ env.VERSION }}
            
            ### Installation
            ```bash
            pip install rail-django-graphql==${{ env.VERSION }}
            ```
            
            ### What's Changed
            See the auto-generated release notes below and [CHANGELOG.md](./CHANGELOG.md) for detailed changes.
            
            ---
            
            *This release was triggered by the auto-tag workflow and processed by the release workflow.*

      - name: Publish to PyPI
        if: ${{ env.HAS_PYPI_TOKEN == 'true' }}
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*
