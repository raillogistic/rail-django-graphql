[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rail-django-graphql"
version = "1.0.0"
description = "Automatic GraphQL schema generation for Django with advanced features"
authors = [{name = "Rail Logistic", email = "contact@raillogistic.com"}]
license = {text = "MIT"}
readme = "readme.md"
requires-python = ">=3.8"
keywords = ["django", "graphql", "schema", "generation", "api", "graphene"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Code Generators",
]

dependencies = [
    "Django>=4.2.0",
    "graphene>=3.4.0",
    "graphene-django>=3.2.0",
    "django-filter>=24.0.0",
    "graphene-file-upload>=1.3.0",
    "django-cors-headers>=4.0.0",
]

[project.optional-dependencies]
auth = ["PyJWT>=2.9.0"]
performance = ["psutil>=7.0.0", "redis>=4.0.0", "django-redis>=5.0.0"]
media = ["Pillow>=10.0.0"]
monitoring = ["sentry-sdk>=1.0.0", "prometheus-client>=0.15.0"]
dev = [
    "pytest>=8.0.0",
    "pytest-django>=4.0.0",
    "pytest-cov>=5.0.0",
    "factory-boy>=3.3.0",
    "coverage>=7.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "djlint>=1.35.0",
]
all = [
    "PyJWT>=2.9.0",
    "psutil>=7.0.0",
    "redis>=4.0.0",
    "django-redis>=5.0.0",
    "Pillow>=10.0.0",
    "sentry-sdk>=1.0.0",
    "prometheus-client>=0.15.0",
]

[project.urls]
Homepage = "https://github.com/raillogistic/rail-django-graphql"
Documentation = "https://rail-django-graphql.readthedocs.io"
Repository = "https://github.com/raillogistic/rail-django-graphql"
Issues = "https://github.com/raillogistic/rail-django-graphql/issues"
Changelog = "https://github.com/raillogistic/rail-django-graphql/blob/main/CHANGELOG.md"

[tool.setuptools]
packages = ["rail_django_graphql"]
include-package-data = true

[tool.setuptools.package-data]
rail_django_graphql = ["templates/**/*", "static/**/*"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "test_app.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = "--cov=rail_django_graphql --cov-report=html --cov-report=term-missing"
testpaths = ["tests"]

[tool.coverage.run]
source = ["rail_django_graphql"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/venv/*",
    "*/env/*",
    "manage.py",
    "*/settings/*",
    "*/test_app/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]