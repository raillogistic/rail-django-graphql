type Query {
  """Retrieve a single logentry instance"""
  logentry(
    """The ID of the logentry to retrieve"""
    id: ID
  ): LogEntryType

  """Retrieve a list of logentry instances"""
  logentrys(
    """Advanced filtering with AND, OR, NOT operations"""
    filters: LogEntryComplexFilter

    """Filter by id"""
    id: Float

    """Filter by id__gt"""
    id__gt: Float

    """Filter by id__gte"""
    id__gte: Float

    """Filter by id__lt"""
    id__lt: Float

    """Filter by id__lte"""
    id__lte: Float

    """Filter by action_time"""
    action_time: Date

    """Filter by action_time__year"""
    action_time__year: Float

    """Filter by action_time__month"""
    action_time__month: Float

    """Filter by action_time__day"""
    action_time__day: Float

    """Filter by action_time__gt"""
    action_time__gt: Date

    """Filter by action_time__lt"""
    action_time__lt: Date

    """Filter by user"""
    user: Float

    """Filter by user__in"""
    user__in: String

    """Filter by content_type"""
    content_type: Float

    """Filter by content_type__in"""
    content_type__in: String

    """Filter by object_id"""
    object_id: String

    """Filter by object_id__icontains"""
    object_id__icontains: String

    """Filter by object_id__startswith"""
    object_id__startswith: String

    """Filter by object_id__endswith"""
    object_id__endswith: String

    """Filter by object_repr"""
    object_repr: String

    """Filter by object_repr__icontains"""
    object_repr__icontains: String

    """Filter by object_repr__startswith"""
    object_repr__startswith: String

    """Filter by object_repr__endswith"""
    object_repr__endswith: String

    """Filter by action_flag"""
    action_flag: String

    """Filter by action_flag__gt"""
    action_flag__gt: Float

    """Filter by action_flag__gte"""
    action_flag__gte: Float

    """Filter by action_flag__lt"""
    action_flag__lt: Float

    """Filter by action_flag__lte"""
    action_flag__lte: Float

    """Filter by change_message"""
    change_message: String

    """Filter by change_message__icontains"""
    change_message__icontains: String

    """Filter by change_message__startswith"""
    change_message__startswith: String

    """Filter by change_message__endswith"""
    change_message__endswith: String

    """Filter by id__range"""
    id__range: String

    """Filter by action_time__range"""
    action_time__range: Date

    """Filter by object_id__contains"""
    object_id__contains: String

    """Filter by object_id__exact"""
    object_id__exact: String

    """Filter by object_repr__contains"""
    object_repr__contains: String

    """Filter by object_repr__exact"""
    object_repr__exact: String

    """Filter by action_flag__range"""
    action_flag__range: String

    """Filter by change_message__contains"""
    change_message__contains: String

    """Filter by change_message__exact"""
    change_message__exact: String

    """Number of records to skip"""
    offset: Int

    """Number of records to return"""
    limit: Int

    """Fields to order by (prefix with - for descending)"""
    order_by: [String]
  ): [LogEntryType]

  """Retrieve a paginated list of logentry instances"""
  logentry_pages(
    """Page number (1-based)"""
    page: Int = 1

    """Number of records per page"""
    per_page: Int = 20
    id: String
    id__in: String
    id__isnull: String
    id__gt: String
    id__gte: String
    id__lt: String
    id__lte: String
    id__range: String
    action_time: String
    action_time__in: String
    action_time__isnull: String
    action_time__gt: String
    action_time__gte: String
    action_time__lt: String
    action_time__lte: String
    action_time__range: String
    action_time__year: String
    action_time__month: String
    action_time__day: String
    object_id: String
    object_id__in: String
    object_id__isnull: String
    object_id__contains: String
    object_id__icontains: String
    object_id__startswith: String
    object_id__istartswith: String
    object_id__endswith: String
    object_id__iendswith: String
    object_repr: String
    object_repr__in: String
    object_repr__isnull: String
    object_repr__contains: String
    object_repr__icontains: String
    object_repr__startswith: String
    object_repr__istartswith: String
    object_repr__endswith: String
    object_repr__iendswith: String
    action_flag: String
    action_flag__in: String
    action_flag__isnull: String
    action_flag__gt: String
    action_flag__gte: String
    action_flag__lt: String
    action_flag__lte: String
    action_flag__range: String
    change_message: String
    change_message__in: String
    change_message__isnull: String
    change_message__contains: String
    change_message__icontains: String
    change_message__startswith: String
    change_message__istartswith: String
    change_message__endswith: String
    change_message__iendswith: String
  ): PaginatedConnection

  """Retrieve a single permission instance"""
  permission(
    """The ID of the permission to retrieve"""
    id: ID
  ): PermissionType

  """Retrieve a list of permission instances"""
  permissions(
    """Advanced filtering with AND, OR, NOT operations"""
    filters: PermissionComplexFilter

    """Filter by id"""
    id: Float

    """Filter by id__gt"""
    id__gt: Float

    """Filter by id__gte"""
    id__gte: Float

    """Filter by id__lt"""
    id__lt: Float

    """Filter by id__lte"""
    id__lte: Float

    """Filter by name"""
    name: String

    """Filter by name__icontains"""
    name__icontains: String

    """Filter by name__startswith"""
    name__startswith: String

    """Filter by name__endswith"""
    name__endswith: String

    """Filter by content_type"""
    content_type: Float

    """Filter by content_type__in"""
    content_type__in: String

    """Filter by codename"""
    codename: String

    """Filter by codename__icontains"""
    codename__icontains: String

    """Filter by codename__startswith"""
    codename__startswith: String

    """Filter by codename__endswith"""
    codename__endswith: String

    """Filter by id__range"""
    id__range: String

    """Filter by name__contains"""
    name__contains: String

    """Filter by name__exact"""
    name__exact: String

    """Filter by codename__contains"""
    codename__contains: String

    """Filter by codename__exact"""
    codename__exact: String

    """Number of records to skip"""
    offset: Int

    """Number of records to return"""
    limit: Int

    """Fields to order by (prefix with - for descending)"""
    order_by: [String]
  ): [PermissionType]

  """Retrieve a paginated list of permission instances"""
  permission_pages(
    """Page number (1-based)"""
    page: Int = 1

    """Number of records per page"""
    per_page: Int = 20
    id: String
    id__in: String
    id__isnull: String
    id__gt: String
    id__gte: String
    id__lt: String
    id__lte: String
    id__range: String
    name: String
    name__in: String
    name__isnull: String
    name__contains: String
    name__icontains: String
    name__startswith: String
    name__istartswith: String
    name__endswith: String
    name__iendswith: String
    codename: String
    codename__in: String
    codename__isnull: String
    codename__contains: String
    codename__icontains: String
    codename__startswith: String
    codename__istartswith: String
    codename__endswith: String
    codename__iendswith: String
  ): PaginatedConnection

  """Retrieve a single group instance"""
  group(
    """The ID of the group to retrieve"""
    id: ID
  ): GroupType

  """Retrieve a list of group instances"""
  groups(
    """Advanced filtering with AND, OR, NOT operations"""
    filters: GroupComplexFilter

    """Filter by id"""
    id: Float

    """Filter by id__gt"""
    id__gt: Float

    """Filter by id__gte"""
    id__gte: Float

    """Filter by id__lt"""
    id__lt: Float

    """Filter by id__lte"""
    id__lte: Float

    """Filter by name"""
    name: String

    """Filter by name__icontains"""
    name__icontains: String

    """Filter by name__startswith"""
    name__startswith: String

    """Filter by name__endswith"""
    name__endswith: String

    """Filter by id__range"""
    id__range: String

    """Filter by name__contains"""
    name__contains: String

    """Filter by name__exact"""
    name__exact: String

    """Number of records to skip"""
    offset: Int

    """Number of records to return"""
    limit: Int

    """Fields to order by (prefix with - for descending)"""
    order_by: [String]
  ): [GroupType]

  """Retrieve a paginated list of group instances"""
  group_pages(
    """Page number (1-based)"""
    page: Int = 1

    """Number of records per page"""
    per_page: Int = 20
    id: String
    id__in: String
    id__isnull: String
    id__gt: String
    id__gte: String
    id__lt: String
    id__lte: String
    id__range: String
    name: String
    name__in: String
    name__isnull: String
    name__contains: String
    name__icontains: String
    name__startswith: String
    name__istartswith: String
    name__endswith: String
    name__iendswith: String
  ): PaginatedConnection

  """Retrieve a single user instance"""
  user(
    """The ID of the user to retrieve"""
    id: ID
  ): UserType

  """Retrieve a list of user instances"""
  users(
    """Advanced filtering with AND, OR, NOT operations"""
    filters: UserComplexFilter

    """Filter by logentry"""
    logentry: String

    """Filter by posts"""
    posts: String

    """Filter by comments"""
    comments: String

    """Filter by id"""
    id: Float

    """Filter by id__gt"""
    id__gt: Float

    """Filter by id__gte"""
    id__gte: Float

    """Filter by id__lt"""
    id__lt: Float

    """Filter by id__lte"""
    id__lte: Float

    """Filter by password"""
    password: String

    """Filter by password__icontains"""
    password__icontains: String

    """Filter by password__startswith"""
    password__startswith: String

    """Filter by password__endswith"""
    password__endswith: String

    """Filter by last_login"""
    last_login: Date

    """Filter by last_login__year"""
    last_login__year: Float

    """Filter by last_login__month"""
    last_login__month: Float

    """Filter by last_login__day"""
    last_login__day: Float

    """Filter by last_login__gt"""
    last_login__gt: Date

    """Filter by last_login__lt"""
    last_login__lt: Date

    """Filter by is_superuser"""
    is_superuser: Boolean

    """Filter by username"""
    username: String

    """Filter by username__icontains"""
    username__icontains: String

    """Filter by username__startswith"""
    username__startswith: String

    """Filter by username__endswith"""
    username__endswith: String

    """Filter by first_name"""
    first_name: String

    """Filter by first_name__icontains"""
    first_name__icontains: String

    """Filter by first_name__startswith"""
    first_name__startswith: String

    """Filter by first_name__endswith"""
    first_name__endswith: String

    """Filter by last_name"""
    last_name: String

    """Filter by last_name__icontains"""
    last_name__icontains: String

    """Filter by last_name__startswith"""
    last_name__startswith: String

    """Filter by last_name__endswith"""
    last_name__endswith: String

    """Filter by email"""
    email: String

    """Filter by email__icontains"""
    email__icontains: String

    """Filter by email__startswith"""
    email__startswith: String

    """Filter by email__endswith"""
    email__endswith: String

    """Filter by is_staff"""
    is_staff: Boolean

    """Filter by is_active"""
    is_active: Boolean

    """Filter by date_joined"""
    date_joined: Date

    """Filter by date_joined__year"""
    date_joined__year: Float

    """Filter by date_joined__month"""
    date_joined__month: Float

    """Filter by date_joined__day"""
    date_joined__day: Float

    """Filter by date_joined__gt"""
    date_joined__gt: Date

    """Filter by date_joined__lt"""
    date_joined__lt: Date

    """Filter by id__range"""
    id__range: String

    """Filter by password__contains"""
    password__contains: String

    """Filter by password__exact"""
    password__exact: String

    """Filter by last_login__range"""
    last_login__range: Date

    """Filter by username__contains"""
    username__contains: String

    """Filter by username__exact"""
    username__exact: String

    """Filter by first_name__contains"""
    first_name__contains: String

    """Filter by first_name__exact"""
    first_name__exact: String

    """Filter by last_name__contains"""
    last_name__contains: String

    """Filter by last_name__exact"""
    last_name__exact: String

    """Filter by email__contains"""
    email__contains: String

    """Filter by email__exact"""
    email__exact: String

    """Filter by date_joined__range"""
    date_joined__range: Date

    """Number of records to skip"""
    offset: Int

    """Number of records to return"""
    limit: Int

    """Fields to order by (prefix with - for descending)"""
    order_by: [String]
  ): [UserType]

  """Retrieve a paginated list of user instances"""
  user_pages(
    """Page number (1-based)"""
    page: Int = 1

    """Number of records per page"""
    per_page: Int = 20
    id: String
    id__in: String
    id__isnull: String
    id__gt: String
    id__gte: String
    id__lt: String
    id__lte: String
    id__range: String
    password: String
    password__in: String
    password__isnull: String
    password__contains: String
    password__icontains: String
    password__startswith: String
    password__istartswith: String
    password__endswith: String
    password__iendswith: String
    last_login: String
    last_login__in: String
    last_login__isnull: String
    last_login__gt: String
    last_login__gte: String
    last_login__lt: String
    last_login__lte: String
    last_login__range: String
    last_login__year: String
    last_login__month: String
    last_login__day: String
    is_superuser: String
    is_superuser__in: String
    is_superuser__isnull: String
    username: String
    username__in: String
    username__isnull: String
    username__contains: String
    username__icontains: String
    username__startswith: String
    username__istartswith: String
    username__endswith: String
    username__iendswith: String
    first_name: String
    first_name__in: String
    first_name__isnull: String
    first_name__contains: String
    first_name__icontains: String
    first_name__startswith: String
    first_name__istartswith: String
    first_name__endswith: String
    first_name__iendswith: String
    last_name: String
    last_name__in: String
    last_name__isnull: String
    last_name__contains: String
    last_name__icontains: String
    last_name__startswith: String
    last_name__istartswith: String
    last_name__endswith: String
    last_name__iendswith: String
    email: String
    email__in: String
    email__isnull: String
    email__contains: String
    email__icontains: String
    email__startswith: String
    email__istartswith: String
    email__endswith: String
    email__iendswith: String
    is_staff: String
    is_staff__in: String
    is_staff__isnull: String
    is_active: String
    is_active__in: String
    is_active__isnull: String
    date_joined: String
    date_joined__in: String
    date_joined__isnull: String
    date_joined__gt: String
    date_joined__gte: String
    date_joined__lt: String
    date_joined__lte: String
    date_joined__range: String
    date_joined__year: String
    date_joined__month: String
    date_joined__day: String
  ): PaginatedConnection

  """Retrieve a single contenttype instance"""
  contenttype(
    """The ID of the contenttype to retrieve"""
    id: ID
  ): ContentTypeType

  """Retrieve a list of contenttype instances"""
  contenttypes(
    """Advanced filtering with AND, OR, NOT operations"""
    filters: ContentTypeComplexFilter

    """Filter by logentry"""
    logentry: String

    """Filter by permission"""
    permission: String

    """Filter by id"""
    id: Float

    """Filter by id__gt"""
    id__gt: Float

    """Filter by id__gte"""
    id__gte: Float

    """Filter by id__lt"""
    id__lt: Float

    """Filter by id__lte"""
    id__lte: Float

    """Filter by app_label"""
    app_label: String

    """Filter by app_label__icontains"""
    app_label__icontains: String

    """Filter by app_label__startswith"""
    app_label__startswith: String

    """Filter by app_label__endswith"""
    app_label__endswith: String

    """Filter by model"""
    model: String

    """Filter by model__icontains"""
    model__icontains: String

    """Filter by model__startswith"""
    model__startswith: String

    """Filter by model__endswith"""
    model__endswith: String

    """Filter by id__range"""
    id__range: String

    """Filter by app_label__contains"""
    app_label__contains: String

    """Filter by app_label__exact"""
    app_label__exact: String

    """Filter by model__contains"""
    model__contains: String

    """Filter by model__exact"""
    model__exact: String

    """Number of records to skip"""
    offset: Int

    """Number of records to return"""
    limit: Int

    """Fields to order by (prefix with - for descending)"""
    order_by: [String]
  ): [ContentTypeType]

  """Retrieve a paginated list of contenttype instances"""
  contenttype_pages(
    """Page number (1-based)"""
    page: Int = 1

    """Number of records per page"""
    per_page: Int = 20
    id: String
    id__in: String
    id__isnull: String
    id__gt: String
    id__gte: String
    id__lt: String
    id__lte: String
    id__range: String
    app_label: String
    app_label__in: String
    app_label__isnull: String
    app_label__contains: String
    app_label__icontains: String
    app_label__startswith: String
    app_label__istartswith: String
    app_label__endswith: String
    app_label__iendswith: String
    model: String
    model__in: String
    model__isnull: String
    model__contains: String
    model__icontains: String
    model__startswith: String
    model__istartswith: String
    model__endswith: String
    model__iendswith: String
  ): PaginatedConnection

  """Retrieve a single session instance"""
  session(
    """The ID of the session to retrieve"""
    id: ID
  ): SessionType

  """Retrieve a list of session instances"""
  sessions(
    """Advanced filtering with AND, OR, NOT operations"""
    filters: SessionComplexFilter

    """Filter by session_key"""
    session_key: String

    """Filter by session_key__icontains"""
    session_key__icontains: String

    """Filter by session_key__startswith"""
    session_key__startswith: String

    """Filter by session_key__endswith"""
    session_key__endswith: String

    """Filter by session_data"""
    session_data: String

    """Filter by session_data__icontains"""
    session_data__icontains: String

    """Filter by session_data__startswith"""
    session_data__startswith: String

    """Filter by session_data__endswith"""
    session_data__endswith: String

    """Filter by expire_date"""
    expire_date: Date

    """Filter by expire_date__year"""
    expire_date__year: Float

    """Filter by expire_date__month"""
    expire_date__month: Float

    """Filter by expire_date__day"""
    expire_date__day: Float

    """Filter by expire_date__gt"""
    expire_date__gt: Date

    """Filter by expire_date__lt"""
    expire_date__lt: Date

    """Filter by session_key__contains"""
    session_key__contains: String

    """Filter by session_key__exact"""
    session_key__exact: String

    """Filter by session_data__contains"""
    session_data__contains: String

    """Filter by session_data__exact"""
    session_data__exact: String

    """Filter by expire_date__range"""
    expire_date__range: Date

    """Number of records to skip"""
    offset: Int

    """Number of records to return"""
    limit: Int

    """Fields to order by (prefix with - for descending)"""
    order_by: [String]
  ): [SessionType]

  """Retrieve a paginated list of session instances"""
  session_pages(
    """Page number (1-based)"""
    page: Int = 1

    """Number of records per page"""
    per_page: Int = 20
    session_key: String
    session_key__in: String
    session_key__isnull: String
    session_key__contains: String
    session_key__icontains: String
    session_key__startswith: String
    session_key__istartswith: String
    session_key__endswith: String
    session_key__iendswith: String
    session_data: String
    session_data__in: String
    session_data__isnull: String
    session_data__contains: String
    session_data__icontains: String
    session_data__startswith: String
    session_data__istartswith: String
    session_data__endswith: String
    session_data__iendswith: String
    expire_date: String
    expire_date__in: String
    expire_date__isnull: String
    expire_date__gt: String
    expire_date__gte: String
    expire_date__lt: String
    expire_date__lte: String
    expire_date__range: String
    expire_date__year: String
    expire_date__month: String
    expire_date__day: String
  ): PaginatedConnection

  """Retrieve a single category instance"""
  category(
    """The ID of the category to retrieve"""
    id: ID
  ): CategoryType

  """Retrieve a list of category instances"""
  categorys(
    """Advanced filtering with AND, OR, NOT operations"""
    filters: CategoryComplexFilter

    """Filter by posts"""
    posts: String

    """Filter by id"""
    id: Float

    """Filter by id__gt"""
    id__gt: Float

    """Filter by id__gte"""
    id__gte: Float

    """Filter by id__lt"""
    id__lt: Float

    """Filter by id__lte"""
    id__lte: Float

    """Filter by name"""
    name: String

    """Filter by name__icontains"""
    name__icontains: String

    """Filter by name__startswith"""
    name__startswith: String

    """Filter by name__endswith"""
    name__endswith: String

    """Filter by slug"""
    slug: String

    """Filter by slug__icontains"""
    slug__icontains: String

    """Filter by slug__startswith"""
    slug__startswith: String

    """Filter by slug__endswith"""
    slug__endswith: String

    """Filter by description"""
    description: String

    """Filter by description__icontains"""
    description__icontains: String

    """Filter by description__startswith"""
    description__startswith: String

    """Filter by description__endswith"""
    description__endswith: String

    """Filter by created_at"""
    created_at: Date

    """Filter by created_at__year"""
    created_at__year: Float

    """Filter by created_at__month"""
    created_at__month: Float

    """Filter by created_at__day"""
    created_at__day: Float

    """Filter by created_at__gt"""
    created_at__gt: Date

    """Filter by created_at__lt"""
    created_at__lt: Date

    """Filter by is_active"""
    is_active: Boolean

    """Filter by order"""
    order: Float

    """Filter by order__gt"""
    order__gt: Float

    """Filter by order__gte"""
    order__gte: Float

    """Filter by order__lt"""
    order__lt: Float

    """Filter by order__lte"""
    order__lte: Float

    """Filter by id__range"""
    id__range: String

    """Filter by name__contains"""
    name__contains: String

    """Filter by name__exact"""
    name__exact: String

    """Filter by slug__contains"""
    slug__contains: String

    """Filter by slug__exact"""
    slug__exact: String

    """Filter by description__contains"""
    description__contains: String

    """Filter by description__exact"""
    description__exact: String

    """Filter by created_at__range"""
    created_at__range: Date

    """Filter by order__range"""
    order__range: String

    """Number of records to skip"""
    offset: Int

    """Number of records to return"""
    limit: Int

    """Fields to order by (prefix with - for descending)"""
    order_by: [String]
  ): [CategoryType]

  """Retrieve a paginated list of category instances"""
  category_pages(
    """Page number (1-based)"""
    page: Int = 1

    """Number of records per page"""
    per_page: Int = 20
    id: String
    id__in: String
    id__isnull: String
    id__gt: String
    id__gte: String
    id__lt: String
    id__lte: String
    id__range: String
    name: String
    name__in: String
    name__isnull: String
    name__contains: String
    name__icontains: String
    name__startswith: String
    name__istartswith: String
    name__endswith: String
    name__iendswith: String
    slug: String
    slug__in: String
    slug__isnull: String
    slug__contains: String
    slug__icontains: String
    slug__startswith: String
    slug__istartswith: String
    slug__endswith: String
    slug__iendswith: String
    description: String
    description__in: String
    description__isnull: String
    description__contains: String
    description__icontains: String
    description__startswith: String
    description__istartswith: String
    description__endswith: String
    description__iendswith: String
    created_at: String
    created_at__in: String
    created_at__isnull: String
    created_at__gt: String
    created_at__gte: String
    created_at__lt: String
    created_at__lte: String
    created_at__range: String
    created_at__year: String
    created_at__month: String
    created_at__day: String
    is_active: String
    is_active__in: String
    is_active__isnull: String
    order: String
    order__in: String
    order__isnull: String
    order__gt: String
    order__gte: String
    order__lt: String
    order__lte: String
    order__range: String
  ): PaginatedConnection

  """Retrieve a single tag instance"""
  tag(
    """The ID of the tag to retrieve"""
    id: ID
  ): TagType

  """Retrieve a list of tag instances"""
  tags(
    """Advanced filtering with AND, OR, NOT operations"""
    filters: TagComplexFilter

    """Filter by id"""
    id: Float

    """Filter by id__gt"""
    id__gt: Float

    """Filter by id__gte"""
    id__gte: Float

    """Filter by id__lt"""
    id__lt: Float

    """Filter by id__lte"""
    id__lte: Float

    """Filter by name"""
    name: String

    """Filter by name__icontains"""
    name__icontains: String

    """Filter by name__startswith"""
    name__startswith: String

    """Filter by name__endswith"""
    name__endswith: String

    """Filter by slug"""
    slug: String

    """Filter by slug__icontains"""
    slug__icontains: String

    """Filter by slug__startswith"""
    slug__startswith: String

    """Filter by slug__endswith"""
    slug__endswith: String

    """Filter by id__range"""
    id__range: String

    """Filter by name__contains"""
    name__contains: String

    """Filter by name__exact"""
    name__exact: String

    """Filter by slug__contains"""
    slug__contains: String

    """Filter by slug__exact"""
    slug__exact: String

    """Number of records to skip"""
    offset: Int

    """Number of records to return"""
    limit: Int

    """Fields to order by (prefix with - for descending)"""
    order_by: [String]
  ): [TagType]

  """Retrieve a paginated list of tag instances"""
  tag_pages(
    """Page number (1-based)"""
    page: Int = 1

    """Number of records per page"""
    per_page: Int = 20
    id: String
    id__in: String
    id__isnull: String
    id__gt: String
    id__gte: String
    id__lt: String
    id__lte: String
    id__range: String
    name: String
    name__in: String
    name__isnull: String
    name__contains: String
    name__icontains: String
    name__startswith: String
    name__istartswith: String
    name__endswith: String
    name__iendswith: String
    slug: String
    slug__in: String
    slug__isnull: String
    slug__contains: String
    slug__icontains: String
    slug__startswith: String
    slug__istartswith: String
    slug__endswith: String
    slug__iendswith: String
  ): PaginatedConnection

  """Retrieve a single post instance"""
  post(
    """The ID of the post to retrieve"""
    id: ID
  ): PostType

  """Retrieve a list of post instances"""
  posts(
    """Advanced filtering with AND, OR, NOT operations"""
    filters: PostComplexFilter

    """Filter by comments"""
    comments: String

    """Filter by id"""
    id: Float

    """Filter by id__gt"""
    id__gt: Float

    """Filter by id__gte"""
    id__gte: Float

    """Filter by id__lt"""
    id__lt: Float

    """Filter by id__lte"""
    id__lte: Float

    """Filter by title"""
    title: String

    """Filter by title__icontains"""
    title__icontains: String

    """Filter by title__startswith"""
    title__startswith: String

    """Filter by title__endswith"""
    title__endswith: String

    """Filter by slug"""
    slug: String

    """Filter by slug__icontains"""
    slug__icontains: String

    """Filter by slug__startswith"""
    slug__startswith: String

    """Filter by slug__endswith"""
    slug__endswith: String

    """Filter by content"""
    content: String

    """Filter by content__icontains"""
    content__icontains: String

    """Filter by content__startswith"""
    content__startswith: String

    """Filter by content__endswith"""
    content__endswith: String

    """Filter by excerpt"""
    excerpt: String

    """Filter by excerpt__icontains"""
    excerpt__icontains: String

    """Filter by excerpt__startswith"""
    excerpt__startswith: String

    """Filter by excerpt__endswith"""
    excerpt__endswith: String

    """Filter by view_count"""
    view_count: Float

    """Filter by view_count__gt"""
    view_count__gt: Float

    """Filter by view_count__gte"""
    view_count__gte: Float

    """Filter by view_count__lt"""
    view_count__lt: Float

    """Filter by view_count__lte"""
    view_count__lte: Float

    """Filter by rating"""
    rating: Float

    """Filter by rating__gt"""
    rating__gt: Float

    """Filter by rating__gte"""
    rating__gte: Float

    """Filter by rating__lt"""
    rating__lt: Float

    """Filter by rating__lte"""
    rating__lte: Float

    """Filter by created_at"""
    created_at: Date

    """Filter by created_at__year"""
    created_at__year: Float

    """Filter by created_at__month"""
    created_at__month: Float

    """Filter by created_at__day"""
    created_at__day: Float

    """Filter by created_at__gt"""
    created_at__gt: Date

    """Filter by created_at__lt"""
    created_at__lt: Date

    """Filter by updated_at"""
    updated_at: Date

    """Filter by updated_at__year"""
    updated_at__year: Float

    """Filter by updated_at__month"""
    updated_at__month: Float

    """Filter by updated_at__day"""
    updated_at__day: Float

    """Filter by updated_at__gt"""
    updated_at__gt: Date

    """Filter by updated_at__lt"""
    updated_at__lt: Date

    """Filter by published_at"""
    published_at: Date

    """Filter by published_at__year"""
    published_at__year: Float

    """Filter by published_at__month"""
    published_at__month: Float

    """Filter by published_at__day"""
    published_at__day: Float

    """Filter by published_at__gt"""
    published_at__gt: Date

    """Filter by published_at__lt"""
    published_at__lt: Date

    """Filter by is_featured"""
    is_featured: Boolean

    """Filter by status"""
    status: String

    """Filter by status__icontains"""
    status__icontains: String

    """Filter by status__startswith"""
    status__startswith: String

    """Filter by status__endswith"""
    status__endswith: String

    """Filter by featured_image"""
    featured_image: String

    """Filter by featured_image__isnull"""
    featured_image__isnull: Boolean

    """Filter by attachment"""
    attachment: String

    """Filter by attachment__isnull"""
    attachment__isnull: Boolean

    """Filter by author"""
    author: Float

    """Filter by author__in"""
    author__in: String

    """Filter by category"""
    category: Float

    """Filter by category__in"""
    category__in: String

    """Filter by id__range"""
    id__range: String

    """Filter by title__contains"""
    title__contains: String

    """Filter by title__exact"""
    title__exact: String

    """Filter by slug__contains"""
    slug__contains: String

    """Filter by slug__exact"""
    slug__exact: String

    """Filter by content__contains"""
    content__contains: String

    """Filter by content__exact"""
    content__exact: String

    """Filter by excerpt__contains"""
    excerpt__contains: String

    """Filter by excerpt__exact"""
    excerpt__exact: String

    """Filter by view_count__range"""
    view_count__range: String

    """Filter by rating__range"""
    rating__range: String

    """Filter by created_at__range"""
    created_at__range: Date

    """Filter by updated_at__range"""
    updated_at__range: Date

    """Filter by published_at__range"""
    published_at__range: Date

    """Filter by status__contains"""
    status__contains: String

    """Filter by status__exact"""
    status__exact: String

    """Filter by featured_image__exact"""
    featured_image__exact: String

    """Filter by attachment__exact"""
    attachment__exact: String

    """Number of records to skip"""
    offset: Int

    """Number of records to return"""
    limit: Int

    """Fields to order by (prefix with - for descending)"""
    order_by: [String]
  ): [PostType]

  """Retrieve a paginated list of post instances"""
  post_pages(
    """Page number (1-based)"""
    page: Int = 1

    """Number of records per page"""
    per_page: Int = 20
    id: String
    id__in: String
    id__isnull: String
    id__gt: String
    id__gte: String
    id__lt: String
    id__lte: String
    id__range: String
    title: String
    title__in: String
    title__isnull: String
    title__contains: String
    title__icontains: String
    title__startswith: String
    title__istartswith: String
    title__endswith: String
    title__iendswith: String
    slug: String
    slug__in: String
    slug__isnull: String
    slug__contains: String
    slug__icontains: String
    slug__startswith: String
    slug__istartswith: String
    slug__endswith: String
    slug__iendswith: String
    content: String
    content__in: String
    content__isnull: String
    content__contains: String
    content__icontains: String
    content__startswith: String
    content__istartswith: String
    content__endswith: String
    content__iendswith: String
    excerpt: String
    excerpt__in: String
    excerpt__isnull: String
    excerpt__contains: String
    excerpt__icontains: String
    excerpt__startswith: String
    excerpt__istartswith: String
    excerpt__endswith: String
    excerpt__iendswith: String
    view_count: String
    view_count__in: String
    view_count__isnull: String
    view_count__gt: String
    view_count__gte: String
    view_count__lt: String
    view_count__lte: String
    view_count__range: String
    rating: String
    rating__in: String
    rating__isnull: String
    rating__gt: String
    rating__gte: String
    rating__lt: String
    rating__lte: String
    rating__range: String
    created_at: String
    created_at__in: String
    created_at__isnull: String
    created_at__gt: String
    created_at__gte: String
    created_at__lt: String
    created_at__lte: String
    created_at__range: String
    created_at__year: String
    created_at__month: String
    created_at__day: String
    updated_at: String
    updated_at__in: String
    updated_at__isnull: String
    updated_at__gt: String
    updated_at__gte: String
    updated_at__lt: String
    updated_at__lte: String
    updated_at__range: String
    updated_at__year: String
    updated_at__month: String
    updated_at__day: String
    published_at: String
    published_at__in: String
    published_at__isnull: String
    published_at__gt: String
    published_at__gte: String
    published_at__lt: String
    published_at__lte: String
    published_at__range: String
    published_at__year: String
    published_at__month: String
    published_at__day: String
    is_featured: String
    is_featured__in: String
    is_featured__isnull: String
    status: String
    status__in: String
    status__isnull: String
    status__contains: String
    status__icontains: String
    status__startswith: String
    status__istartswith: String
    status__endswith: String
    status__iendswith: String
    featured_image: String
    featured_image__in: String
    featured_image__isnull: String
    attachment: String
    attachment__in: String
    attachment__isnull: String
  ): PaginatedConnection

  """Retrieve a single comment instance"""
  comment(
    """The ID of the comment to retrieve"""
    id: ID
  ): CommentType

  """Retrieve a list of comment instances"""
  comments(
    """Advanced filtering with AND, OR, NOT operations"""
    filters: CommentComplexFilter

    """Filter by replies"""
    replies: String

    """Filter by id"""
    id: Float

    """Filter by id__gt"""
    id__gt: Float

    """Filter by id__gte"""
    id__gte: Float

    """Filter by id__lt"""
    id__lt: Float

    """Filter by id__lte"""
    id__lte: Float

    """Filter by post"""
    post: Float

    """Filter by post__in"""
    post__in: String

    """Filter by author"""
    author: Float

    """Filter by author__in"""
    author__in: String

    """Filter by parent"""
    parent: Float

    """Filter by parent__in"""
    parent__in: String

    """Filter by content"""
    content: String

    """Filter by content__icontains"""
    content__icontains: String

    """Filter by content__startswith"""
    content__startswith: String

    """Filter by content__endswith"""
    content__endswith: String

    """Filter by created_at"""
    created_at: Date

    """Filter by created_at__year"""
    created_at__year: Float

    """Filter by created_at__month"""
    created_at__month: Float

    """Filter by created_at__day"""
    created_at__day: Float

    """Filter by created_at__gt"""
    created_at__gt: Date

    """Filter by created_at__lt"""
    created_at__lt: Date

    """Filter by updated_at"""
    updated_at: Date

    """Filter by updated_at__year"""
    updated_at__year: Float

    """Filter by updated_at__month"""
    updated_at__month: Float

    """Filter by updated_at__day"""
    updated_at__day: Float

    """Filter by updated_at__gt"""
    updated_at__gt: Date

    """Filter by updated_at__lt"""
    updated_at__lt: Date

    """Filter by is_approved"""
    is_approved: Boolean

    """Filter by id__range"""
    id__range: String

    """Filter by content__contains"""
    content__contains: String

    """Filter by content__exact"""
    content__exact: String

    """Filter by created_at__range"""
    created_at__range: Date

    """Filter by updated_at__range"""
    updated_at__range: Date

    """Number of records to skip"""
    offset: Int

    """Number of records to return"""
    limit: Int

    """Fields to order by (prefix with - for descending)"""
    order_by: [String]
  ): [CommentType]

  """Retrieve a paginated list of comment instances"""
  comment_pages(
    """Page number (1-based)"""
    page: Int = 1

    """Number of records per page"""
    per_page: Int = 20
    id: String
    id__in: String
    id__isnull: String
    id__gt: String
    id__gte: String
    id__lt: String
    id__lte: String
    id__range: String
    content: String
    content__in: String
    content__isnull: String
    content__contains: String
    content__icontains: String
    content__startswith: String
    content__istartswith: String
    content__endswith: String
    content__iendswith: String
    created_at: String
    created_at__in: String
    created_at__isnull: String
    created_at__gt: String
    created_at__gte: String
    created_at__lt: String
    created_at__lte: String
    created_at__range: String
    created_at__year: String
    created_at__month: String
    created_at__day: String
    updated_at: String
    updated_at__in: String
    updated_at__isnull: String
    updated_at__gt: String
    updated_at__gte: String
    updated_at__lt: String
    updated_at__lte: String
    updated_at__range: String
    updated_at__year: String
    updated_at__month: String
    updated_at__day: String
    is_approved: String
    is_approved__in: String
    is_approved__isnull: String
  ): PaginatedConnection
  _debug: DjangoDebug
}

"""GraphQL type for the LogEntry model."""
type LogEntryType implements Node {
  """The ID of the object"""
  id: ID!
  action_time: DateTime!
  user: UserType!
  content_type: ContentTypeType
  object_id: String
  object_repr: String!
  action_flag: AdminLogEntryActionFlagChoices!
  change_message: String!

  """Primary key of the model"""
  pk: ID
}

"""An object with an ID"""
interface Node {
  """The ID of the object"""
  id: ID!
}

"""
The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime

"""GraphQL type for the User model."""
type UserType implements Node {
  """The ID of the object"""
  id: ID!
  password: String!
  last_login: DateTime

  """
  Designates that this user has all permissions without explicitly assigning them.
  """
  is_superuser: Boolean!

  """
  The groups this user belongs to. A user will get all permissions granted to each of their groups.
  """
  groups(offset: Int, before: String, after: String, first: Int, last: Int): GroupTypeConnection!

  """Specific permissions for this user."""
  user_permissions(offset: Int, before: String, after: String, first: Int, last: Int): PermissionTypeConnection!

  """Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."""
  username: String!
  first_name: String!
  last_name: String!
  email: String!

  """Designates whether the user can log into this admin site."""
  is_staff: Boolean!

  """
  Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
  """
  is_active: Boolean!
  date_joined: DateTime!
  logentry_set(offset: Int, before: String, after: String, first: Int, last: Int): LogEntryTypeConnection!

  """Related Post objects"""
  posts: [PostType]

  """Related Comment objects"""
  comments: [CommentType]

  """Primary key of the model"""
  pk: ID
}

type GroupTypeConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [GroupTypeEdge]!
}

"""
The Relay compliant `PageInfo` type, containing data necessary to paginate this connection.
"""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

"""A Relay edge containing a `GroupType` and its cursor."""
type GroupTypeEdge {
  """The item at the end of the edge"""
  node: GroupType

  """A cursor for use in pagination"""
  cursor: String!
}

"""GraphQL type for the Group model."""
type GroupType implements Node {
  """The ID of the object"""
  id: ID!
  name: String!
  permissions(offset: Int, before: String, after: String, first: Int, last: Int): PermissionTypeConnection!

  """Related User objects"""
  user_set: [UserType]

  """Primary key of the model"""
  pk: ID
}

type PermissionTypeConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [PermissionTypeEdge]!
}

"""A Relay edge containing a `PermissionType` and its cursor."""
type PermissionTypeEdge {
  """The item at the end of the edge"""
  node: PermissionType

  """A cursor for use in pagination"""
  cursor: String!
}

"""GraphQL type for the Permission model."""
type PermissionType implements Node {
  """The ID of the object"""
  id: ID!
  name: String!
  content_type: ContentTypeType!
  codename: String!
  group_set(offset: Int, before: String, after: String, first: Int, last: Int): GroupTypeConnection!

  """Related User objects"""
  user_set: [UserType]

  """Primary key of the model"""
  pk: ID
}

"""GraphQL type for the ContentType model."""
type ContentTypeType implements Node {
  """The ID of the object"""
  id: ID!
  app_label: String!
  model: String!
  logentry_set(offset: Int, before: String, after: String, first: Int, last: Int): LogEntryTypeConnection!
  permission_set(offset: Int, before: String, after: String, first: Int, last: Int): PermissionTypeConnection!

  """Primary key of the model"""
  pk: ID
}

type LogEntryTypeConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [LogEntryTypeEdge]!
}

"""A Relay edge containing a `LogEntryType` and its cursor."""
type LogEntryTypeEdge {
  """The item at the end of the edge"""
  node: LogEntryType

  """A cursor for use in pagination"""
  cursor: String!
}

"""GraphQL type for the Post model."""
type PostType implements Node {
  """The ID of the object"""
  id: ID!
  title: String!
  slug: String!
  content: String!
  excerpt: String!
  view_count: Int!
  rating: Decimal
  created_at: DateTime!
  updated_at: DateTime!
  published_at: DateTime
  is_featured: Boolean!
  status: TestAppPostStatusChoices!
  featured_image: String
  attachment: String
  author: UserType!
  category: CategoryType!
  tags(offset: Int, before: String, after: String, first: Int, last: Int): TagTypeConnection!
  related_posts(offset: Int, before: String, after: String, first: Int, last: Int): PostTypeConnection!

  """Related Post objects"""
  related_to: [PostType]

  """Related Comment objects"""
  comments: [CommentType]

  """Primary key of the model"""
  pk: ID
}

"""The `Decimal` scalar type represents a python Decimal."""
scalar Decimal

"""An enumeration."""
enum TestAppPostStatusChoices {
  """Draft"""
  DRAFT

  """Published"""
  PUBLISHED

  """Archived"""
  ARCHIVED
}

"""GraphQL type for the Category model."""
type CategoryType implements Node {
  """The ID of the object"""
  id: ID!
  name: String!
  slug: String!
  description: String!
  created_at: DateTime!
  is_active: Boolean!
  order: Int!

  """Related Post objects"""
  posts: [PostType]

  """Primary key of the model"""
  pk: ID
}

type TagTypeConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [TagTypeEdge]!
}

"""A Relay edge containing a `TagType` and its cursor."""
type TagTypeEdge {
  """The item at the end of the edge"""
  node: TagType

  """A cursor for use in pagination"""
  cursor: String!
}

"""GraphQL type for the Tag model."""
type TagType implements Node {
  """The ID of the object"""
  id: ID!
  name: String!
  slug: String!

  """Related Post objects"""
  posts: [PostType]

  """Primary key of the model"""
  pk: ID
}

type PostTypeConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [PostTypeEdge]!
}

"""A Relay edge containing a `PostType` and its cursor."""
type PostTypeEdge {
  """The item at the end of the edge"""
  node: PostType

  """A cursor for use in pagination"""
  cursor: String!
}

"""GraphQL type for the Comment model."""
type CommentType implements Node {
  """The ID of the object"""
  id: ID!
  post: PostType!
  author: UserType!
  parent: CommentType
  content: String!
  created_at: DateTime!
  updated_at: DateTime!
  is_approved: Boolean!

  """Related Comment objects"""
  replies: [CommentType]

  """Primary key of the model"""
  pk: ID
}

"""An enumeration."""
enum AdminLogEntryActionFlagChoices {
  """Addition"""
  A_1

  """Change"""
  A_2

  """Deletion"""
  A_3
}

input LogEntryComplexFilter {
  id: Float
  id__gt: Float
  id__gte: Float
  id__lt: Float
  id__lte: Float
  action_time__year: Float
  action_time__month: Float
  action_time__day: Float
  action_time__gt: Date
  action_time__lt: Date
  user: Float
  content_type: Float
  object_id: String
  object_id__icontains: String
  object_id__startswith: String
  object_id__endswith: String
  object_repr: String
  object_repr__icontains: String
  object_repr__startswith: String
  object_repr__endswith: String
  action_flag: String
  action_flag__gt: Float
  action_flag__gte: Float
  action_flag__lt: Float
  action_flag__lte: Float
  change_message: String
  change_message__icontains: String
  change_message__startswith: String
  change_message__endswith: String
  action_time__range: String
  object_id__contains: String
  object_id__exact: String
  object_repr__contains: String
  object_repr__exact: String
  change_message__contains: String
  change_message__exact: String
  AND: [LogEntryComplexFilter]
  OR: [LogEntryComplexFilter]
  NOT: LogEntryComplexFilter = null
}

"""
The `Date` scalar type represents a Date
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar Date

type PaginatedConnection {
  """List of logentry instances"""
  items: [LogEntryType]

  """Pagination metadata"""
  page_info: PaginationInfo
}

type PaginationInfo {
  """Total number of records"""
  total_count: Int

  """Total number of pages"""
  page_count: Int

  """Current page number"""
  current_page: Int

  """Number of records per page"""
  per_page: Int

  """Whether there is a next page"""
  has_next_page: Boolean

  """Whether there is a previous page"""
  has_previous_page: Boolean
}

input PermissionComplexFilter {
  id: Float
  id__gt: Float
  id__gte: Float
  id__lt: Float
  id__lte: Float
  name: String
  name__icontains: String
  name__startswith: String
  name__endswith: String
  content_type: Float
  codename: String
  codename__icontains: String
  codename__startswith: String
  codename__endswith: String
  name__contains: String
  name__exact: String
  codename__contains: String
  codename__exact: String
  AND: [PermissionComplexFilter]
  OR: [PermissionComplexFilter]
  NOT: PermissionComplexFilter = null
}

input GroupComplexFilter {
  id: Float
  id__gt: Float
  id__gte: Float
  id__lt: Float
  id__lte: Float
  name: String
  name__icontains: String
  name__startswith: String
  name__endswith: String
  name__contains: String
  name__exact: String
  AND: [GroupComplexFilter]
  OR: [GroupComplexFilter]
  NOT: GroupComplexFilter = null
}

input UserComplexFilter {
  id: Float
  id__gt: Float
  id__gte: Float
  id__lt: Float
  id__lte: Float
  password: String
  password__icontains: String
  password__startswith: String
  password__endswith: String
  last_login__year: Float
  last_login__month: Float
  last_login__day: Float
  last_login__gt: Date
  last_login__lt: Date
  is_superuser: Boolean
  username: String
  username__icontains: String
  username__startswith: String
  username__endswith: String
  first_name: String
  first_name__icontains: String
  first_name__startswith: String
  first_name__endswith: String
  last_name: String
  last_name__icontains: String
  last_name__startswith: String
  last_name__endswith: String
  email: String
  email__icontains: String
  email__startswith: String
  email__endswith: String
  is_staff: Boolean
  is_active: Boolean
  date_joined__year: Float
  date_joined__month: Float
  date_joined__day: Float
  date_joined__gt: Date
  date_joined__lt: Date
  password__contains: String
  password__exact: String
  last_login__range: String
  username__contains: String
  username__exact: String
  first_name__contains: String
  first_name__exact: String
  last_name__contains: String
  last_name__exact: String
  email__contains: String
  email__exact: String
  date_joined__range: String
  AND: [UserComplexFilter]
  OR: [UserComplexFilter]
  NOT: UserComplexFilter = null
}

input ContentTypeComplexFilter {
  id: Float
  id__gt: Float
  id__gte: Float
  id__lt: Float
  id__lte: Float
  app_label: String
  app_label__icontains: String
  app_label__startswith: String
  app_label__endswith: String
  model: String
  model__icontains: String
  model__startswith: String
  model__endswith: String
  app_label__contains: String
  app_label__exact: String
  model__contains: String
  model__exact: String
  AND: [ContentTypeComplexFilter]
  OR: [ContentTypeComplexFilter]
  NOT: ContentTypeComplexFilter = null
}

"""GraphQL type for the Session model."""
type SessionType implements Node {
  session_key: String!
  session_data: String!
  expire_date: DateTime!

  """The ID of the object"""
  id: ID!

  """Primary key of the model"""
  pk: ID
}

input SessionComplexFilter {
  session_key: String
  session_key__icontains: String
  session_key__startswith: String
  session_key__endswith: String
  session_data: String
  session_data__icontains: String
  session_data__startswith: String
  session_data__endswith: String
  expire_date__year: Float
  expire_date__month: Float
  expire_date__day: Float
  expire_date__gt: Date
  expire_date__lt: Date
  session_key__contains: String
  session_key__exact: String
  session_data__contains: String
  session_data__exact: String
  expire_date__range: String
  AND: [SessionComplexFilter]
  OR: [SessionComplexFilter]
  NOT: SessionComplexFilter = null
}

input CategoryComplexFilter {
  id: Float
  id__gt: Float
  id__gte: Float
  id__lt: Float
  id__lte: Float
  name: String
  name__icontains: String
  name__startswith: String
  name__endswith: String
  slug: String
  slug__icontains: String
  slug__startswith: String
  slug__endswith: String
  description: String
  description__icontains: String
  description__startswith: String
  description__endswith: String
  created_at__year: Float
  created_at__month: Float
  created_at__day: Float
  created_at__gt: Date
  created_at__lt: Date
  is_active: Boolean
  order: Float
  order__gt: Float
  order__gte: Float
  order__lt: Float
  order__lte: Float
  name__contains: String
  name__exact: String
  slug__contains: String
  slug__exact: String
  description__contains: String
  description__exact: String
  created_at__range: String
  AND: [CategoryComplexFilter]
  OR: [CategoryComplexFilter]
  NOT: CategoryComplexFilter = null
}

input TagComplexFilter {
  id: Float
  id__gt: Float
  id__gte: Float
  id__lt: Float
  id__lte: Float
  name: String
  name__icontains: String
  name__startswith: String
  name__endswith: String
  slug: String
  slug__icontains: String
  slug__startswith: String
  slug__endswith: String
  name__contains: String
  name__exact: String
  slug__contains: String
  slug__exact: String
  AND: [TagComplexFilter]
  OR: [TagComplexFilter]
  NOT: TagComplexFilter = null
}

input PostComplexFilter {
  id: Float
  id__gt: Float
  id__gte: Float
  id__lt: Float
  id__lte: Float
  title: String
  title__icontains: String
  title__startswith: String
  title__endswith: String
  slug: String
  slug__icontains: String
  slug__startswith: String
  slug__endswith: String
  content: String
  content__icontains: String
  content__startswith: String
  content__endswith: String
  excerpt: String
  excerpt__icontains: String
  excerpt__startswith: String
  excerpt__endswith: String
  view_count: Float
  view_count__gt: Float
  view_count__gte: Float
  view_count__lt: Float
  view_count__lte: Float
  rating: Float
  rating__gt: Float
  rating__gte: Float
  rating__lt: Float
  rating__lte: Float
  created_at__year: Float
  created_at__month: Float
  created_at__day: Float
  created_at__gt: Date
  created_at__lt: Date
  updated_at__year: Float
  updated_at__month: Float
  updated_at__day: Float
  updated_at__gt: Date
  updated_at__lt: Date
  published_at__year: Float
  published_at__month: Float
  published_at__day: Float
  published_at__gt: Date
  published_at__lt: Date
  is_featured: Boolean
  status: String
  status__icontains: String
  status__startswith: String
  status__endswith: String
  featured_image: String
  featured_image__isnull: Boolean
  attachment: String
  attachment__isnull: Boolean
  author: Float
  category: Float
  title__contains: String
  title__exact: String
  slug__contains: String
  slug__exact: String
  content__contains: String
  content__exact: String
  excerpt__contains: String
  excerpt__exact: String
  created_at__range: String
  updated_at__range: String
  published_at__range: String
  status__contains: String
  status__exact: String
  featured_image__exact: String
  attachment__exact: String
  AND: [PostComplexFilter]
  OR: [PostComplexFilter]
  NOT: PostComplexFilter = null
}

input CommentComplexFilter {
  id: Float
  id__gt: Float
  id__gte: Float
  id__lt: Float
  id__lte: Float
  post: Float
  author: Float
  parent: Float
  content: String
  content__icontains: String
  content__startswith: String
  content__endswith: String
  created_at__year: Float
  created_at__month: Float
  created_at__day: Float
  created_at__gt: Date
  created_at__lt: Date
  updated_at__year: Float
  updated_at__month: Float
  updated_at__day: Float
  updated_at__gt: Date
  updated_at__lt: Date
  is_approved: Boolean
  content__contains: String
  content__exact: String
  created_at__range: String
  updated_at__range: String
  AND: [CommentComplexFilter]
  OR: [CommentComplexFilter]
  NOT: CommentComplexFilter = null
}

"""Debugging information for the current query."""
type DjangoDebug {
  """Executed SQL queries for this API query."""
  sql: [DjangoDebugSQL]

  """Raise exceptions for this API query."""
  exceptions: [DjangoDebugException]
}

"""Represents a single database query made to a Django managed DB."""
type DjangoDebugSQL {
  """The type of database being used (e.g. postrgesql, mysql, sqlite)."""
  vendor: String!

  """The Django database alias (e.g. 'default')."""
  alias: String!

  """The actual SQL sent to this database."""
  sql: String

  """Duration of this database query in seconds."""
  duration: Float!

  """The raw SQL of this query, without params."""
  raw_sql: String!

  """JSON encoded database query parameters."""
  params: String!

  """Start time of this database query."""
  start_time: Float!

  """Stop time of this database query."""
  stop_time: Float!

  """Whether this database query took more than 10 seconds."""
  is_slow: Boolean!

  """Whether this database query was a SELECT."""
  is_select: Boolean!

  """Postgres transaction ID if available."""
  trans_id: String

  """Postgres transaction status if available."""
  trans_status: String

  """Postgres isolation level if available."""
  iso_level: String

  """Postgres connection encoding if available."""
  encoding: String
}

"""Represents a single exception raised."""
type DjangoDebugException {
  """The class of the exception"""
  exc_type: String!

  """The message of the exception"""
  message: String!

  """The stack trace"""
  stack: String!
}

type Mutation {
  """Create a new LogEntry instance"""
  create_logentry(input: LogEntryInput!): CreateLogEntry

  """Update an existing LogEntry instance"""
  update_logentry(id: ID!, input: LogEntryInput!): UpdateLogEntry

  """Delete a LogEntry instance"""
  delete_logentry(id: ID!): DeleteLogEntry

  """Create a new Permission instance"""
  create_permission(input: PermissionInput!): CreatePermission

  """Update an existing Permission instance"""
  update_permission(id: ID!, input: PermissionInput!): UpdatePermission

  """Delete a Permission instance"""
  delete_permission(id: ID!): DeletePermission

  """Create a new Group instance"""
  create_group(input: GroupInput!): CreateGroup

  """Update an existing Group instance"""
  update_group(id: ID!, input: GroupInput!): UpdateGroup

  """Delete a Group instance"""
  delete_group(id: ID!): DeleteGroup

  """Create a new User instance"""
  create_user(input: UserInput!): CreateUser

  """Update an existing User instance"""
  update_user(id: ID!, input: UserInput!): UpdateUser

  """Delete a User instance"""
  delete_user(id: ID!): DeleteUser

  """Create a new ContentType instance"""
  create_contenttype(input: ContentTypeInput!): CreateContentType

  """Update an existing ContentType instance"""
  update_contenttype(id: ID!, input: ContentTypeInput!): UpdateContentType

  """Delete a ContentType instance"""
  delete_contenttype(id: ID!): DeleteContentType

  """Create a new Session instance"""
  create_session(input: SessionInput!): CreateSession

  """Update an existing Session instance"""
  update_session(id: ID!, input: SessionInput!): UpdateSession

  """Delete a Session instance"""
  delete_session(id: ID!): DeleteSession

  """Create a new Category instance"""
  create_category(input: CategoryInput!): CreateCategory

  """Update an existing Category instance"""
  update_category(id: ID!, input: CategoryInput!): UpdateCategory

  """Delete a Category instance"""
  delete_category(id: ID!): DeleteCategory

  """Create a new Tag instance"""
  create_tag(input: TagInput!): CreateTag

  """Update an existing Tag instance"""
  update_tag(id: ID!, input: TagInput!): UpdateTag

  """Delete a Tag instance"""
  delete_tag(id: ID!): DeleteTag

  """Create a new Post instance"""
  create_post(input: PostInput!): CreatePost

  """Update an existing Post instance"""
  update_post(id: ID!, input: PostInput!): UpdatePost

  """Delete a Post instance"""
  delete_post(id: ID!): DeletePost

  """Create a new Comment instance"""
  create_comment(input: CommentInput!): CreateComment

  """Update an existing Comment instance"""
  update_comment(id: ID!, input: CommentInput!): UpdateComment

  """Delete a Comment instance"""
  delete_comment(id: ID!): DeleteComment
}

"""Create a new LogEntry instance"""
type CreateLogEntry {
  ok: Boolean
  object: LogEntryType
  errors: [String]
}

"""Input type for creating/updating LogEntry instances."""
input LogEntryInput {
  """"""
  action_time: DateTime

  """"""
  object_id: String

  """"""
  object_repr: String!

  """"""
  action_flag: Int!

  """"""
  change_message: String
  user: ID!
  content_type: ID
}

"""Update an existing LogEntry instance"""
type UpdateLogEntry {
  ok: Boolean
  object: LogEntryType
  errors: [String]
}

"""Delete a LogEntry instance"""
type DeleteLogEntry {
  ok: Boolean
  object: LogEntryType
  errors: [String]
}

"""Create a new Permission instance"""
type CreatePermission {
  ok: Boolean
  object: PermissionType
  errors: [String]
}

"""Input type for creating/updating Permission instances."""
input PermissionInput {
  """"""
  name: String!

  """"""
  codename: String!
  content_type: ID!
}

"""Update an existing Permission instance"""
type UpdatePermission {
  ok: Boolean
  object: PermissionType
  errors: [String]
}

"""Delete a Permission instance"""
type DeletePermission {
  ok: Boolean
  object: PermissionType
  errors: [String]
}

"""Create a new Group instance"""
type CreateGroup {
  ok: Boolean
  object: GroupType
  errors: [String]
}

"""Input type for creating/updating Group instances."""
input GroupInput {
  """"""
  name: String!
  permissions: [ID]
}

"""Update an existing Group instance"""
type UpdateGroup {
  ok: Boolean
  object: GroupType
  errors: [String]
}

"""Delete a Group instance"""
type DeleteGroup {
  ok: Boolean
  object: GroupType
  errors: [String]
}

"""Create a new User instance"""
type CreateUser {
  ok: Boolean
  object: UserType
  errors: [String]
}

"""Input type for creating/updating User instances."""
input UserInput {
  """"""
  password: String!

  """"""
  last_login: DateTime

  """
  Designates that this user has all permissions without explicitly assigning them.
  """
  is_superuser: Boolean

  """Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."""
  username: String!

  """"""
  first_name: String

  """"""
  last_name: String

  """"""
  email: String

  """Designates whether the user can log into this admin site."""
  is_staff: Boolean

  """
  Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
  """
  is_active: Boolean

  """"""
  date_joined: DateTime
  groups: [ID]
  user_permissions: [ID]
}

"""Update an existing User instance"""
type UpdateUser {
  ok: Boolean
  object: UserType
  errors: [String]
}

"""Delete a User instance"""
type DeleteUser {
  ok: Boolean
  object: UserType
  errors: [String]
}

"""Create a new ContentType instance"""
type CreateContentType {
  ok: Boolean
  object: ContentTypeType
  errors: [String]
}

"""Input type for creating/updating ContentType instances."""
input ContentTypeInput {
  """"""
  app_label: String!

  """"""
  model: String!
}

"""Update an existing ContentType instance"""
type UpdateContentType {
  ok: Boolean
  object: ContentTypeType
  errors: [String]
}

"""Delete a ContentType instance"""
type DeleteContentType {
  ok: Boolean
  object: ContentTypeType
  errors: [String]
}

"""Create a new Session instance"""
type CreateSession {
  ok: Boolean
  object: SessionType
  errors: [String]
}

"""Input type for creating/updating Session instances."""
input SessionInput {
  """"""
  session_key: String!

  """"""
  session_data: String!

  """"""
  expire_date: DateTime!
}

"""Update an existing Session instance"""
type UpdateSession {
  ok: Boolean
  object: SessionType
  errors: [String]
}

"""Delete a Session instance"""
type DeleteSession {
  ok: Boolean
  object: SessionType
  errors: [String]
}

"""Create a new Category instance"""
type CreateCategory {
  ok: Boolean
  object: CategoryType
  errors: [String]
}

"""Input type for creating/updating Category instances."""
input CategoryInput {
  """"""
  name: String!

  """"""
  slug: String!

  """"""
  description: String

  """"""
  created_at: DateTime

  """"""
  is_active: Boolean

  """"""
  order: Int
}

"""Update an existing Category instance"""
type UpdateCategory {
  ok: Boolean
  object: CategoryType
  errors: [String]
}

"""Delete a Category instance"""
type DeleteCategory {
  ok: Boolean
  object: CategoryType
  errors: [String]
}

"""Create a new Tag instance"""
type CreateTag {
  ok: Boolean
  object: TagType
  errors: [String]
}

"""Input type for creating/updating Tag instances."""
input TagInput {
  """"""
  name: String!

  """"""
  slug: String!
}

"""Update an existing Tag instance"""
type UpdateTag {
  ok: Boolean
  object: TagType
  errors: [String]
}

"""Delete a Tag instance"""
type DeleteTag {
  ok: Boolean
  object: TagType
  errors: [String]
}

"""Create a new Post instance"""
type CreatePost {
  ok: Boolean
  object: PostType
  errors: [String]
}

"""Input type for creating/updating Post instances."""
input PostInput {
  """"""
  title: String!

  """"""
  slug: String!

  """"""
  content: String!

  """"""
  excerpt: String

  """"""
  view_count: Int

  """"""
  rating: Decimal

  """"""
  created_at: DateTime

  """"""
  updated_at: DateTime

  """"""
  published_at: DateTime

  """"""
  is_featured: Boolean

  """"""
  status: String

  """"""
  featured_image: String

  """"""
  attachment: String
  author: ID!
  category: ID!
  tags: [ID]
  related_posts: [ID]
}

"""Update an existing Post instance"""
type UpdatePost {
  ok: Boolean
  object: PostType
  errors: [String]
}

"""Delete a Post instance"""
type DeletePost {
  ok: Boolean
  object: PostType
  errors: [String]
}

"""Create a new Comment instance"""
type CreateComment {
  ok: Boolean
  object: CommentType
  errors: [String]
}

"""Input type for creating/updating Comment instances."""
input CommentInput {
  """"""
  content: String!

  """"""
  created_at: DateTime

  """"""
  updated_at: DateTime

  """"""
  is_approved: Boolean
  post: ID!
  author: ID!
  parent: ID
}

"""Update an existing Comment instance"""
type UpdateComment {
  ok: Boolean
  object: CommentType
  errors: [String]
}

"""Delete a Comment instance"""
type DeleteComment {
  ok: Boolean
  object: CommentType
  errors: [String]
}