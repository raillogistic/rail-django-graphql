# Tox configuration for Rail Django GraphQL
# Test across multiple Python and Django versions

[tox]
envlist = 
    py{38,39,310,311,312}-django{42,50,51}
    flake8
    mypy
    black
    isort
    bandit
    safety
    docs
skip_missing_interpreters = true
minversion = 4.0

[testenv]
deps =
    django42: Django>=4.2,<4.3
    django50: Django>=5.0,<5.1
    django51: Django>=5.1,<5.2
    
    # Test dependencies
    pytest>=7.0.0
    pytest-django>=4.5.0
    pytest-cov>=4.0.0
    pytest-xdist>=3.0.0
    factory-boy>=3.2.0
    
    # Required dependencies
    graphene-django>=3.0.0,<4.0.0
    graphene>=3.0.0,<4.0.0
    django-filter>=23.0,<25.0
    django-cors-headers>=4.0.0,<5.0.0

commands =
    pytest {posargs}

[testenv:flake8]
deps = 
    flake8>=6.0.0
    flake8-docstrings>=1.7.0
    flake8-import-order>=0.18.0
    flake8-bugbear>=23.0.0
commands = 
    flake8 rail_django_graphql/

[testenv:mypy]
deps = 
    mypy>=1.0.0
    types-all
    Django>=4.2
    graphene-django>=3.0.0
commands = 
    mypy rail_django_graphql/

[testenv:black]
deps = black>=23.0.0
commands = 
    black --check --diff rail_django_graphql/

[testenv:isort]
deps = isort>=5.12.0
commands = 
    isort --check-only --diff rail_django_graphql/

[testenv:bandit]
deps = bandit>=1.7.0
commands = 
    bandit -r rail_django_graphql/ -f json -o bandit-report.json

[testenv:safety]
deps = safety>=2.3.0
commands = 
    safety check

[testenv:docs]
deps = 
    sphinx>=6.0.0
    sphinx-rtd-theme>=1.2.0
    sphinx-autodoc-typehints>=1.20.0
    Django>=4.2
    graphene-django>=3.0.0
commands = 
    sphinx-build -W -b html docs docs/_build/html

[testenv:coverage]
deps = 
    {[testenv]deps}
    coverage>=7.0.0
commands = 
    coverage run -m pytest
    coverage report
    coverage html
    coverage xml

[testenv:integration]
deps = 
    {[testenv]deps}
    psycopg2-binary>=2.9.0
    redis>=4.0.0
commands = 
    pytest tests/integration/ {posargs}

# GitHub Actions environment
[testenv:py{38,39,310,311,312}-django{42,50,51}-github]
deps = {[testenv]deps}
commands = 
    pytest --cov=rail_django_graphql --cov-report=xml --cov-report=term-missing {posargs}

# Development environment
[testenv:dev]
deps = 
    {[testenv]deps}
    ipython>=8.0.0
    ipdb>=0.13.0
    pre-commit>=3.0.0
commands = 
    pre-commit install
    pytest

# Performance testing
[testenv:performance]
deps = 
    {[testenv]deps}
    pytest-benchmark>=4.0.0
    redis>=4.0.0
    django-redis>=5.2.0
commands = 
    pytest tests/performance/ --benchmark-only {posargs}

# Security testing
[testenv:security]
deps = 
    bandit>=1.7.0
    safety>=2.3.0
    semgrep>=1.0.0
commands = 
    bandit -r rail_django_graphql/
    safety check
    semgrep --config=auto rail_django_graphql/

[pytest]
DJANGO_SETTINGS_MODULE = tests.settings
python_files = tests.py test_*.py *_tests.py
python_classes = Test*
python_functions = test_*
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
testpaths = tests
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    performance: marks tests as performance tests

[coverage:run]
source = rail_django_graphql
omit = 
    */migrations/*
    */tests/*
    */venv/*
    */env/*
    manage.py
    setup.py
    */settings/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod